@charset "UTF-8";
/***
    The new CSS reset - version 1.8.2 (last updated 23.12.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Shrikhand&display=swap");
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
  user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: "";
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  line-break: after-white-space;
  -webkit-user-select: auto;
  user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

html {
  font-size: 16px;
  font-family: roboto, sans-serif;
}

.header {
  text-align: center;
}
.header__logo {
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}
.header__location {
  padding: 0.9375em 0;
  font-weight: 500;
  opacity: 0.8;
  background-color: rgba(0, 0, 0, 0.1);
}
.header__location i {
  margin-right: 1.25em;
}

.hero {
  padding: 3.125em 0;
  background-color: rgba(0, 0, 0, 0.05);
}
.hero__title {
  width: 75%;
  margin: auto;
}
.hero__description {
  width: 90%;
  margin: auto;
  opacity: 0.75;
  font-size: 1.125rem;
  font-weight: 300;
  margin-top: 0.9375em;
  margin-bottom: 1.875em;
}

.btn {
  background: linear-gradient(#ff79da, 25%, #9356dc);
  color: white;
  font-weight: 500;
  padding: 0.9375em 1.25em;
  border-radius: 25px;
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.24);
  cursor: pointer;
}
.btn:hover {
  background: linear-gradient(#fface8, 25%, #ae80e5);
}

.logo {
  box-sizing: content-box;
  height: 30px;
  padding: 0.9375em 0;
}

.title {
  font-size: 1.5rem;
  font-weight: 700;
}

/*# sourceMappingURL=main.css.map */
